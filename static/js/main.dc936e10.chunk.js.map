{"version":3,"sources":["components/Contacts /Contacts .jsx","components/FindContacts/FindContacts.jsx","components/InputContacts/InputContacts.jsx","components/App/App.jsx","services/localStorage.js","index.js","components/InputContacts/InputContacts.module.css","components/FindContacts/FindContacts.module.css","components/Contacts /contacts.module.css"],"names":["Contacts","items","onDaleteCard","map","name","number","id","className","s","item","type","onClick","btn","FindContacts","onFilterChange","value","title","action","htmlFor","find","input","onChange","InputContacts","mainContacts","onSubmit","useState","setName","setNumber","setId","handleChange","e","console","log","target","nanoid","reset","form","preventDefault","some","newName","alert","label","pattern","required","button","CONTACTS_KEY","App","contacts","setContacts","filter","setFilter","useEffect","sevedContacts","key","JSON","parse","localStorage","getItem","error","get","setItem","stringify","save","newContacts","prevState","contact","toLowerCase","includes","idDelete","prevContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dc936e10.chunk.js","sourcesContent":["import s from \"./contacts.module.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst Contacts = ({ items, onDaleteCard }) => {\n  return (\n    <div>\n      <ul>\n        {items.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            <p>\n              {name}:{number}\n            </p>\n            <button\n              type=\"submit\"\n              onClick={() => onDaleteCard(id)}\n              className={s.btn}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  items: PropTypes.array,\n  onDaleteCard: PropTypes.func,\n};\nexport default Contacts;\n","import s from \"./FindContacts.module.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst FindContacts = ({ onFilterChange, value }) => {\n  return (\n    <div>\n      <h2 className={s.title}>Contacts</h2>\n\n      <form action=\"\">\n        <label htmlFor=\"\" className={s.find}>\n          Finde contacts by name\n          <input\n            type=\"text\"\n            className={s.input}\n            value={value}\n            onChange={onFilterChange}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nFindContacts.propTypes = {\n  onFilterChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default FindContacts;\n","import s from \"./InputContacts.module.css\";\nimport { useState } from \"react\";\n\nimport { nanoid } from \"nanoid\";\n\nconst InputContacts = ({ mainContacts, onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const handleChange = (e) => {\n    console.log(`e.target`, e.target.name);\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n    setId(nanoid(5));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    mainContacts.some(({ newName }) => newName === e.target.value)\n      ? alert(`${name} is alredy in contact`)\n      : onSubmit({ name, number, id });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n    setId(\"\");\n  };\n  return (\n    <div>\n      <h1 className={s.title}>Phonebook</h1>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\" className={s.label}>\n          name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label htmlFor=\"\" className={s.label}>\n          number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.button}>\n          add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputContacts;\n","import { useState, useEffect } from \"react\";\nimport Contacts from \"../Contacts /Contacts \";\nimport FindContacts from \"../FindContacts/FindContacts\";\nimport InputContacts from \"../InputContacts/InputContacts\";\n\nimport { get, save } from \"../../services/localStorage\";\n\nconst CONTACTS_KEY = \"contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const sevedContacts = get(CONTACTS_KEY);\n    if (sevedContacts) {\n      setContacts(sevedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    save(CONTACTS_KEY, contacts);\n  }, [contacts]);\n\n  const addContacts = (newContacts) => {\n    setContacts((prevState) => [...prevState, newContacts]);\n  };\n\n  const handleFilterChange = (e) => setFilter(e.target.value);\n\n  const getFilterContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const onDaleteCard = (idDelete) => {\n    console.log(idDelete);\n    setContacts((prevContacts) =>\n      prevContacts.filter(({ id }) => id !== idDelete)\n    );\n  };\n\n  return (\n    <div>\n      <InputContacts onSubmit={addContacts} mainContacts={contacts} />\n      <FindContacts onFilterChange={handleFilterChange} value={filter} />\n      <Contacts items={getFilterContacts(filter)} onDaleteCard={onDaleteCard} />\n    </div>\n  );\n};\n\nexport default App;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputContacts_form__GZK3_\",\"label\":\"InputContacts_label__1aefF\",\"button\":\"InputContacts_button__1_9Jn\",\"title\":\"InputContacts_title__3eXMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"FindContacts_find__372A-\",\"input\":\"FindContacts_input__4fWyi\",\"title\":\"FindContacts_title__-IvSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contacts_item__2tTD7\",\"btn\":\"contacts_btn__3HcCm\"};"],"sourceRoot":""}